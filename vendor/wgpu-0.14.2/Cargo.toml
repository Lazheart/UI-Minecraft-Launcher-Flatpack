# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "wgpu"
version = "0.14.2"
authors = ["wgpu developers"]
exclude = [
    "etc/**/*",
    "examples/**/*.png",
    "examples/**/*.dds",
    "examples/**/*.ktx2",
    "examples/**/*.mtl",
    "examples/**/*.obj",
    "tests/**/*",
    "Cargo.lock",
    "target/**/*",
]
autotests = false
description = "Rusty WebGPU API wrapper"
homepage = "https://wgpu.rs/"
readme = "README.md"
keywords = ["graphics"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/gfx-rs/wgpu/tree/v0.13"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]

[[example]]
name = "boids"
test = true

[[example]]
name = "bunnymark"
test = true

[[example]]
name = "conservative-raster"
test = true

[[example]]
name = "cube"
test = true

[[example]]
name = "hello-compute"
test = true

[[example]]
name = "mipmap"
test = true

[[example]]
name = "msaa-line"
test = true

[[example]]
name = "shadow"
test = true

[[example]]
name = "skybox"
test = true

[[example]]
name = "texture-arrays"
test = true

[[example]]
name = "water"
test = true

[[test]]
name = "wgpu-tests"
path = "tests/root.rs"

[dependencies.arrayvec]
version = "0.7"

[dependencies.log]
version = "0.4"

[dependencies.naga]
version = "0.10"
features = ["clone"]
optional = true

[dependencies.parking_lot]
version = ">=0.11,<0.13"

[dependencies.raw-window-handle]
version = "0.5"

[dependencies.serde]
version = "1"
features = ["derive"]
optional = true

[dependencies.smallvec]
version = "1"

[dependencies.static_assertions]
version = "1.1.0"

[dependencies.wgt]
version = "0.14"
package = "wgpu-types"

[dev-dependencies.bitflags]
version = "1"

[dev-dependencies.bytemuck]
version = "1.4"
features = ["derive"]

[dev-dependencies.ddsfile]
version = "0.5"

[dev-dependencies.futures-intrusive]
version = "0.4"

[dev-dependencies.glam]
version = "0.21.3"

[dev-dependencies.log]
version = "0.4"

[dev-dependencies.naga]
version = "0.10"
features = ["wgsl-in"]

[dev-dependencies.nanorand]
version = "0.7"
features = ["wyrand"]
default-features = false

[dev-dependencies.noise]
version = "0.7"
default-features = false

[dev-dependencies.obj]
version = "0.10"

[dev-dependencies.png]
version = "0.17"

[dev-dependencies.winit]
version = "0.27.1"

[features]
angle = ["wgc/angle"]
default = []
emscripten = ["webgl"]
glsl = ["naga/glsl-in"]
replay = [
    "serde",
    "wgc/replay",
]
spirv = ["naga/spv-in"]
trace = [
    "serde",
    "wgc/trace",
]
vulkan-portability = ["wgc/vulkan-portability"]
webgl = ["wgc"]

[target."cfg(any(not(target_arch = \"wasm32\"), target_os = \"emscripten\"))".dependencies.hal]
version = "0.14"
package = "wgpu-hal"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.wgc]
version = "0.14.2"
features = ["raw-window-handle"]
package = "wgpu-core"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.async-executor]
version = "1.0"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.env_logger]
version = "0.9"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.pollster]
version = "0.2"

[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3.60"

[target."cfg(target_arch = \"wasm32\")".dependencies.naga]
version = "0.10"
features = ["wgsl-out"]

[target."cfg(target_arch = \"wasm32\")".dependencies.parking_lot]
version = ">=0.11,<0.13"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "0.2.83"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen-futures]
version = "0.4.33"

[target."cfg(target_arch = \"wasm32\")".dependencies.web-sys]
version = "0.3.60"
features = [
    "Document",
    "Navigator",
    "Node",
    "NodeList",
    "Gpu",
    "GpuAdapter",
    "GpuAddressMode",
    "GpuAutoLayoutMode",
    "GpuBindGroup",
    "GpuBindGroupDescriptor",
    "GpuBindGroupEntry",
    "GpuBindGroupLayout",
    "GpuBindGroupLayoutDescriptor",
    "GpuBindGroupLayoutEntry",
    "GpuBlendComponent",
    "GpuBlendFactor",
    "GpuBlendOperation",
    "GpuBlendState",
    "GpuBuffer",
    "GpuBufferBinding",
    "GpuBufferBindingLayout",
    "GpuBufferBindingType",
    "GpuBufferDescriptor",
    "GpuCanvasAlphaMode",
    "GpuCanvasContext",
    "GpuCanvasConfiguration",
    "GpuColorDict",
    "GpuColorTargetState",
    "GpuCommandBuffer",
    "GpuCommandBufferDescriptor",
    "GpuCommandEncoder",
    "GpuCommandEncoderDescriptor",
    "GpuCompareFunction",
    "GpuCompilationInfo",
    "GpuCompilationMessage",
    "GpuCompilationMessageType",
    "GpuComputePassDescriptor",
    "GpuComputePassEncoder",
    "GpuComputePipeline",
    "GpuComputePipelineDescriptor",
    "GpuCullMode",
    "GpuDepthStencilState",
    "GpuDevice",
    "GpuDeviceDescriptor",
    "GpuDeviceLostInfo",
    "GpuDeviceLostReason",
    "GpuError",
    "GpuErrorFilter",
    "GpuExtent3dDict",
    "GpuFeatureName",
    "GpuFilterMode",
    "GpuFragmentState",
    "GpuFrontFace",
    "GpuImageCopyBuffer",
    "GpuImageCopyExternalImage",
    "GpuImageCopyTexture",
    "GpuImageCopyTextureTagged",
    "GpuImageDataLayout",
    "GpuIndexFormat",
    "GpuLoadOp",
    "gpu_map_mode",
    "GpuMipmapFilterMode",
    "GpuMultisampleState",
    "GpuObjectDescriptorBase",
    "GpuOrigin2dDict",
    "GpuOrigin3dDict",
    "GpuOutOfMemoryError",
    "GpuPipelineDescriptorBase",
    "GpuPipelineLayout",
    "GpuPipelineLayoutDescriptor",
    "GpuPowerPreference",
    "GpuPrimitiveState",
    "GpuPrimitiveTopology",
    "GpuProgrammableStage",
    "GpuQuerySet",
    "GpuQuerySetDescriptor",
    "GpuQueryType",
    "GpuQueue",
    "GpuRenderBundle",
    "GpuRenderBundleDescriptor",
    "GpuRenderBundleEncoder",
    "GpuRenderBundleEncoderDescriptor",
    "GpuRenderPassColorAttachment",
    "GpuRenderPassDepthStencilAttachment",
    "GpuRenderPassDescriptor",
    "GpuRenderPassEncoder",
    "GpuRenderPipeline",
    "GpuRenderPipelineDescriptor",
    "GpuRequestAdapterOptions",
    "GpuSampler",
    "GpuSamplerBindingLayout",
    "GpuSamplerBindingType",
    "GpuSamplerDescriptor",
    "GpuShaderModule",
    "GpuShaderModuleDescriptor",
    "GpuStencilFaceState",
    "GpuStencilOperation",
    "GpuStorageTextureAccess",
    "GpuStorageTextureBindingLayout",
    "GpuStoreOp",
    "GpuSupportedFeatures",
    "GpuSupportedLimits",
    "GpuTexture",
    "GpuTextureAspect",
    "GpuTextureBindingLayout",
    "GpuTextureDescriptor",
    "GpuTextureDimension",
    "GpuTextureFormat",
    "GpuTextureSampleType",
    "GpuTextureView",
    "GpuTextureViewDescriptor",
    "GpuTextureViewDimension",
    "GpuUncapturedErrorEvent",
    "GpuUncapturedErrorEventInit",
    "GpuValidationError",
    "GpuVertexAttribute",
    "GpuVertexBufferLayout",
    "GpuVertexFormat",
    "GpuVertexState",
    "GpuVertexStepMode",
    "HtmlCanvasElement",
    "OffscreenCanvas",
    "ImageBitmap",
    "ImageBitmapRenderingContext",
    "Window",
]

[target."cfg(target_arch = \"wasm32\")".dependencies.wgc]
version = "0.14"
features = ["raw-window-handle"]
optional = true
package = "wgpu-core"

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.console_error_panic_hook]
version = "0.1.7"

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.console_log]
version = "0.2"

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.web-sys]
version = "0.3.60"
features = [
    "Location",
    "Blob",
    "RequestInit",
    "RequestMode",
    "Request",
    "Response",
]
